{"id":"js/shaders/vertexShader.glsl","dependencies":[{"name":"C:\\Users\\user\\Desktop\\GSAP PROJECTS\\rgb-threejs-tut\\package.json","includedInParent":true,"mtime":1657294854538}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// float M_PI = 3.141529;\\n\\n// void main(){\\n//     vUv = uv;\\n//     vec3 newPosition = position;\\n\\n//     gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n// }\\n\\nuniform sampler2D uTexture;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\n#define M_PI 3.1415926535897932384626433832795\\n\\nvec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {\\n   position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n   position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n   return position;\\n}\\n\\nvoid main() {\\n   vUv = uv;\\n   vec3 newPosition = deformationCurve(position, uv, uOffset);\\n   gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n}\";"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/shaders/vertexShader.glsl","original":{"line":1,"column":0},"name":"module"},{"generated":{"line":1,"column":6},"source":"js/shaders/vertexShader.glsl","original":{"line":1,"column":6}},{"generated":{"line":1,"column":7},"source":"js/shaders/vertexShader.glsl","original":{"line":1,"column":7},"name":"exports"},{"generated":{"line":1,"column":14},"source":"js/shaders/vertexShader.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shaders/vertexShader.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":821},"source":"js/shaders/vertexShader.glsl","original":{"line":1,"column":0}}],"sources":{"js/shaders/vertexShader.glsl":"module.exports=\"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// float M_PI = 3.141529;\\n\\n// void main(){\\n//     vUv = uv;\\n//     vec3 newPosition = position;\\n\\n//     gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n// }\\n\\nuniform sampler2D uTexture;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\n#define M_PI 3.1415926535897932384626433832795\\n\\nvec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {\\n   position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n   position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n   return position;\\n}\\n\\nvoid main() {\\n   vUv = uv;\\n   vec3 newPosition = deformationCurve(position, uv, uOffset);\\n   gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n}\";"},"lineCount":null}},"error":null,"hash":"1ada8015590cf107421470b2a2268791","cacheData":{"env":{}}}